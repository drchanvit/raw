{"version":3,"sources":["components/AppFrame.js","components/MyMain.js","components/UseDataApi.js","components/Appbar.js","serviceWorker.js","index.js","components/useStyles.js"],"names":["AppFrame","props","classes","useStyles","isAdd","title","cityList","onMenuClick","setCityList","handleClickOpen","removeAllLocation","saveLocationList","React","useState","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","refreshPage","window","location","reload","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","renderMobileMenu","IconButton","aria-label","color","Badge","badgeContent","Object","keys","length","size","Fragment","position","Toolbar","edge","className","menuButton","Typography","variant","noWrap","search","searchIcon","InputBase","placeholder","root","inputRoot","input","inputInput","inputProps","grow","sectionDesktop","aria-controls","aria-haspopup","event","currentTarget","sectionMobile","ShowCities","lazy","Grid","MyMain","handleClose","selectedValue","setOpen","data","setSelectedValue","fallback","exact","path","dataFetchReducer","state","action","type","isLoading","isError","payload","Error","UseDataApi","initialOptions","options","useReducer","dispatch","promiseArray","map","option","axios","get","useEffect","didCancel","a","Promise","all","result","fetchData","AppBar","drawer","setDrawer","setTitle","setIsAdd","locations","localStorage","getItem","JSON","parse","ex","console","log","stringify","loadLocationList","history","createBrowserHistory","value","newCityList","newList","setItem","getQuery","cardCity","key","isLocalhost","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","Appbar","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","checkValidServiceWorker","makeStyles","theme","padding","spacing","flexGrow","marginRight","display","breakpoints","up","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","height","pointerEvents","alignItems","justifyContent","paddingLeft","transition","transitions","create","fab","removeCity","border","float","appBar","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","flexShrink","mixins","toolbar"],"mappings":"8YA0LeA,EAvKA,SAAAC,GACb,IAAMC,EAAUC,cACNC,EACLH,EADKG,MAAOC,EACZJ,EADYI,MAAOC,EACnBL,EADmBK,SAAuBC,GAC1CN,EAD6BO,YAC7BP,EAD0CM,aAAaE,EACvDR,EADuDQ,gBAAmCC,GAC1FT,EADwEU,iBACxEV,EAD0FS,mBAF3E,EAIYE,IAAMC,SAAS,MAJ3B,mBAIbC,EAJa,KAIHC,EAJG,OAKgCH,IAAMC,SAAS,MAL/C,mBAKbG,EALa,KAKOC,EALP,KAOdC,EAAaC,QAAQL,GACrBM,EAAmBD,QAAQH,GAE3BK,EAAY,WAChBC,OAAOC,SAASC,QAAO,IAQnBC,EAAwB,WAC5BR,EAAsB,OAGlBS,EAAkB,WACtBX,EAAY,MACZU,KAOIE,EAAS,8BACTC,EACJ,kBAACC,EAAA,EAAD,CACEf,SAAUA,EACVgB,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7CC,GAAIN,EACJO,aAAW,EACXC,gBAAiB,CAAEJ,SAAU,MAAOC,WAAY,SAChDI,KAAMlB,EACNmB,QAASX,GAET,kBAACY,EAAA,EAAD,CAAUC,QAASb,GAAnB,WACA,kBAACY,EAAA,EAAD,CAAUC,QAAS7B,GAAnB,sBAKE8B,EACJ,kBAACX,EAAA,EAAD,CACEf,SAAUE,EACVc,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7CC,GALiB,qCAMjBC,aAAW,EACXC,gBAAiB,CAAEJ,SAAU,MAAOC,WAAY,SAChDI,KAAMhB,EACNiB,QAASZ,GAET,kBAACa,EAAA,EAAD,CAAWC,QAAS9B,GAClB,kBAACgC,EAAA,EAAD,CAAYR,GAAG,SAASS,aAAW,aAAaC,MAAM,WACpD,kBAACC,EAAA,EAAD,CAAOC,aAAcC,OAAOC,KAAKzC,GAAU0C,OAAQL,MAAM,aACvD,kBAAC,IAAD,QAGJ,wCAEF,kBAACL,EAAA,EAAD,CAAUC,QAASlB,GACvB,kBAACoB,EAAA,EAAD,CAAYR,GAAG,aAAaS,aAAW,UAAUC,MAAM,UAAUM,KAAK,UAC5D,kBAAC,IAAD,OAEJ,uCAEH,kBAACX,EAAA,EAAD,CAAUC,QAAS7B,GACtB,kBAAC+B,EAAA,EAAD,CAAYR,GAAG,YAAYS,aAAW,oBAAoBC,MAAM,UAAUM,KAAK,UACrE,kBAAC,IAAD,OAEJ,kDAKN,OACD,kBAAC,IAAMC,SAAP,KACK,kBAAC,IAAD,CAAQC,SAAS,UACf,kBAACC,EAAA,EAAD,KACE,kBAACX,EAAA,EAAD,CACEY,KAAK,QACLC,UAAWpD,EAAQqD,WACnBZ,MAAM,UACND,aAAW,OACpBO,KAAK,SACLV,QAAShC,GAEA,kBAAC,IAAD,OAEF,kBAACiD,EAAA,EAAD,CAAYF,UAAWpD,EAAQG,MAAOoD,QAAQ,KAAKC,QAAM,GAC7DrD,GAEDD,GACA,yBAAKkD,UAAWpD,EAAQyD,QACzB,yBAAKL,UAAWpD,EAAQ0D,YACtB,kBAAC,IAAD,OAEF,kBAACC,EAAA,EAAD,CACEC,YAAY,eACZ5D,QAAS,CACV6D,KAAM7D,EAAQ8D,UACdC,MAAO/D,EAAQgE,YAEdC,WAAY,CAAE,aAAc,aAKxB,yBAAKb,UAAWpD,EAAQkE,OACxB,yBAAKd,UAAWpD,EAAQmE,gBACtB,kBAAC5B,EAAA,EAAD,CAAaR,GAAG,SAAUU,MAAM,UAAUM,KAAK,SAASV,QAAS9B,GAC/D,kBAACmC,EAAA,EAAD,CAAOC,aAAcC,OAAOC,KAAKzC,GAAU0C,OAAQL,MAAM,aACvD,kBAAC,IAAD,QAGb,kBAACF,EAAA,EAAD,CAAaR,GAAG,aAAcU,MAAM,UAAUM,KAAK,SAASV,QAASlB,GACxD,kBAAC,IAAD,OAEJ,kBAACoB,EAAA,EAAD,CACEY,KAAK,MACLX,aAAW,0BACX4B,gBAAe3C,EACf4C,gBAAc,OACdhC,QAnHkB,SAACiC,GAC7BzD,EAAYyD,EAAMC,gBAmHR9B,MAAM,UACfM,KAAK,UAEI,kBAAC,IAAD,QAGJ,yBAAKK,UAAWpD,EAAQwE,eACtB,kBAACjC,EAAA,EAAD,CACEC,aAAW,YACX4B,gBA5FS,qCA6FTC,gBAAc,OACdhC,QAlHiB,SAACiC,GAC5BvD,EAAsBuD,EAAMC,gBAkHlB9B,MAAM,UACfM,KAAK,UAEI,kBAAC,IAAD,UAKPT,EACAZ,I,0FCvKD+C,EAAaC,gBAAK,kBAAM,uDAExBC,GADOD,gBAAK,kBAAM,iCACXA,gBAAK,kBAAM,kCAkETE,EA/Db,SAAA7E,GAAU,IACEK,EACPL,EADOK,SAAUE,EACjBP,EADiBO,YAAaC,EAC9BR,EAD8BQ,gBAAiBsE,EAC/C9E,EAD+C8E,YAAapE,EAC5DV,EAD4DU,iBAAkByB,EAC9EnC,EAD8EmC,KAAe4C,GAC7F/E,EADoFgF,QACpFhF,EAD6F+E,eAAiCE,GAC9HjF,EAD4GkF,iBAC5GlF,EAD8HiF,MAGpI,OACK,8BACC,kBAAC,WAAD,CAAUE,SAAU,4CACtB,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,KACnB,kBAACX,EAAD,CACErE,SAAUA,EACVE,YAAaA,EACbC,gBAAiBA,EACjBsE,YAAaA,EACbpE,iBAAkBA,EAClByB,KAAMA,EACN4C,cAAeA,EACfE,KAAMA,KAGP,kBAAC,IAAD,CAAOI,KAAK,SACb,kBAAC,EAAD,OAEC,kBAAC,IAAD,CAAOA,KAAK,eACb,kBAACX,EAAD,CACErE,SAAUA,EACVE,YAAaA,EACbC,gBAAiBA,EACjBsE,YAAaA,EACbpE,iBAAkBA,EAClByB,KAAMA,EACN4C,cAAeA,EACfE,KAAMA,KAGP,kBAAC,IAAD,KACD,kBAACP,EAAD,CACErE,SAAUA,EACVE,YAAaA,EACbC,gBAAiBA,EACjBsE,YAAaA,EACbpE,iBAAkBA,EAClByB,KAAMA,EACN4C,cAAeA,EACfE,KAAMA,Q,kDCjDNK,EAAmB,SAACC,EAAOC,GAC/B,OAAQA,EAAOC,MACb,IAAK,aACH,OAAO,2BACFF,GADL,IAEEG,WAAW,EACXC,SAAS,IAEb,IAAK,gBACH,OAAO,2BACFJ,GADL,IAEEN,KAAMO,EAAOI,QACbD,SAAS,EACfD,WAAW,IAET,IAAK,gBACH,OAAO,2BACFH,GADL,IAEEG,WAAW,EACXC,SAAS,IAEb,QACE,MAAM,IAAIE,QAsCDC,EAlCI,SAACC,GAClB,IAAMC,EAAUD,EADqB,EAEXE,qBAAWX,EAAkB,CACrDL,KAAM,GACTU,SAAS,EACND,WAAW,IALwB,mBAE9BH,EAF8B,KAEvBW,EAFuB,KAQjCC,EAAeH,EAAQI,KAAI,SAAAC,GAAM,OAAEC,IAAMC,IAAIF,MAuBlD,OApBCG,qBAAU,WACT,IAAIC,GAAY,EAejB,OAdgB,uCAAG,4BAAAC,EAAA,6DACjBR,EAAS,CAAET,KAAM,eADA,kBAGGkB,QAAQC,IAAIT,GAHf,OAGZU,EAHY,OAIZJ,GACLP,EAAS,CAAET,KAAM,gBAAiBG,QAASiB,IAL1B,gDAQZJ,GACLP,EAAS,CAAET,KAAM,kBATA,yDAAH,oDAadqB,GACK,WACLL,GAAY,KAEX,IACG,CAAClB,IC8DMwB,EA9FF,SAAC,GAAe,EAAbvD,QAAc,IAAD,EAEC5C,oBAAS,GAFV,mBAEpBoG,EAFoB,KAEZC,EAFY,OAGDrG,mBAAS,WAHR,mBAGpBR,EAHoB,KAGb8G,EAHa,OAIHtG,oBAAS,GAJN,mBAIpBT,EAJoB,KAIbgH,EAJa,OAKGvG,mBAxBT,WACrB,IAAIwG,EAAYC,aAAaC,QAAQ,gBACrC,GAAIF,EACF,IACEA,EAAYG,KAAKC,MAAMJ,GACvB,MAAOK,GACPL,EAAY,GAGhB,IAAKA,GAA+C,IAAlCvE,OAAOC,KAAKsE,GAAWrE,OAAc,EAErDqE,EAAY,IADA,SAEK,CAACpF,GAAI,SAGxB,OADA0F,QAAQC,IAAIJ,KAAKK,UAAUR,IACpBA,EASgCS,IALZ,mBAKpBxH,EALoB,KAKVE,EALU,OAMHI,IAAMC,UAAS,GANZ,mBAMpBuB,EANoB,KAMd6C,EANc,OAOerE,IAAMC,SAAS,IAP9B,mBAOpBmE,EAPoB,KAOLG,EAPK,KAmBvB4C,EAAUC,cAETvH,EAAkB,WACvBwE,GAAQ,IAGHF,EAAc,SAACkD,GACpBhD,GAAQ,GACRE,EAAiB8C,GACjB,IAAIC,EAAY5H,GAAkB,GAE5B4H,EADOD,GACY,CAAChG,GAAIgG,GAC9BtH,EAAiBuH,GACjB1H,EAAY0H,GACZ5G,OAAOC,SAASC,QAAO,IAUjBb,EAAiB,SAAC0G,GACvB,IAAIc,EAAUX,KAAKK,UAAUR,GAC7BC,aAAac,QAAQ,eAAgBD,IAGjCE,EACLvF,OAAOC,KAAKzC,GAAU+F,KAAI,SAACiC,EAAUC,GAClC,MACI,uDAAuDD,EAAS,8CAnD5C,EAuDWvC,EAAWsC,GAvDtB,sBAuDlBnD,EAvDkB,EAuDlBA,KAvDkB,EAuDZS,UAvDY,EAuDDC,QAG1B,OACE,6BAEA,kBAAC,IAAD,CAAQmC,QAASA,GACf,kBAAC,EAAD,CACD3H,MAAOA,EACTgH,SAAUA,EACV/G,MAAOA,EACP8G,SAAUA,EACV5G,YA1DoB,WACnB2G,GAAWD,IA0DZ3G,SAAUA,EACVE,YAAaA,EACbC,gBAAiBA,EACjBsE,YAAaA,EACbpE,iBAAkBA,EAClBD,kBArCuB,WACxB,IAAIwH,EAAY,GAChBvH,EAAiBuH,GACjB1H,EAAY0H,GACZ5G,OAAOC,SAASC,QAAO,MAoCtB,kBAAC,EAAD,CACClB,SAAUA,EACZE,YAAaA,EACbC,gBAAiBA,EACjBsE,YAAaA,EACbpE,iBAAkBA,EAClByB,KAAMA,EACN6C,QAASA,EACTD,cAAeA,EACfG,iBAAkBA,EAClBD,KAAMA,OCtGFsD,EAAcrH,QACW,cAA7BG,OAAOC,SAASkH,UAEe,UAA7BnH,OAAOC,SAASkH,UAEhBnH,OAAOC,SAASkH,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB5D,QACfsD,UAAUC,cAAcQ,YAI1B5B,QAAQC,IACN,iHAKEiB,GAAUA,EAAOW,UACnBX,EAAOW,SAASN,KAMlBvB,QAAQC,IAAI,sCAGRiB,GAAUA,EAAOY,WACnBZ,EAAOY,UAAUP,WAO5BQ,OAAM,SAAAC,GACLhC,QAAQgC,MAAM,4CAA6CA,MC1FjEC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACC,EAAD,OAEFC,SAASC,eAAe,SDYnB,SAAkBpB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIoB,IAAIC,OAAwB7I,OAAOC,SAAS6I,MACpDC,SAAW/I,OAAOC,SAAS8I,OAIvC,OAGF/I,OAAOgJ,iBAAiB,QAAQ,WAC9B,IAAM1B,EAAK,UAAMuB,OAAN,sBAEP3B,IAgEV,SAAiCI,EAAOC,GAEtC0B,MAAM3B,EAAO,CACX4B,QAAS,CAAE,iBAAkB,YAE5BvB,MAAK,SAAAwB,GAEJ,IAAMC,EAAcD,EAASD,QAAQhE,IAAI,gBAEnB,MAApBiE,EAASE,QACO,MAAfD,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5C9B,UAAUC,cAAc8B,MAAM5B,MAAK,SAAAC,GACjCA,EAAa4B,aAAa7B,MAAK,WAC7B3H,OAAOC,SAASC,eAKpBmH,EAAgBC,EAAOC,MAG1Ba,OAAM,WACL/B,QAAQC,IACN,oEAvFAmD,CAAwBnC,EAAOC,GAI/BC,UAAUC,cAAc8B,MAAM5B,MAAK,WACjCtB,QAAQC,IACN,iHAMJe,EAAgBC,EAAOC,OClC/BE,I,oECdM5I,EAAY6K,aAAW,SAACC,GAAD,kBAC3BlH,KAAM,CACJmH,QAASD,EAAME,QAAQ,IAEzB/G,KAAM,CACJgH,SAAU,GAEZ7H,WAAY,CACV8H,YAAaJ,EAAME,QAAQ,IAE7B9K,MAAM,aACJiL,QAAS,QACRL,EAAMM,YAAYC,GAAG,MAAQ,CAC5BF,QAAS,UAGb3H,OAAO,aACLR,SAAU,WACVsI,aAAcR,EAAMS,MAAMD,aAC1BE,gBAAiBC,YAAKX,EAAMY,QAAQC,OAAOC,MAAO,KAClD,UAAW,CACTJ,gBAAiBC,YAAKX,EAAMY,QAAQC,OAAOC,MAAO,MAEpDV,YAAaJ,EAAME,QAAQ,GAC3Ba,WAAY,EACZC,MAAO,QACNhB,EAAMM,YAAYC,GAAG,MAAQ,CAC5BQ,WAAYf,EAAME,QAAQ,GAC1Bc,MAAO,SAGXrI,WAAY,CACVsH,QAASD,EAAME,QAAQ,EAAG,GAC1Be,OAAQ,OACR/I,SAAU,WACVgJ,cAAe,OACfb,QAAS,OACTc,WAAY,SACZC,eAAgB,UAElBrI,UAAW,CACTrB,MAAO,WAETuB,WAAW,aACTgH,QAASD,EAAME,QAAQ,EAAG,EAAG,EAAG,GAEhCmB,YAAY,cAAD,OAAgBrB,EAAME,QAAQ,GAA9B,OACXoB,WAAYtB,EAAMuB,YAAYC,OAAO,SACrCR,MAAO,QACNhB,EAAMM,YAAYC,GAAG,MAAQ,CAC5BS,MAAO,SAGX5H,eAAe,aACbiH,QAAS,QACRL,EAAMM,YAAYC,GAAG,MAAQ,CAC5BF,QAAS,SAGb5G,cAAc,aACZ4G,QAAS,QACRL,EAAMM,YAAYC,GAAG,MAAQ,CAC5BF,QAAS,SAGboB,KAAG,mBACA,mBAAqB,WADrB,cAEA,gBAAkB,OAFlB,uBAGQ,QAHR,uBAIK,QAJL,wBAKM,QALN,yBAMO,SANP,sBAOI,QAPJ,sBAQI,QARJ,cASF,UAAY,KATV,GAYJC,WAAY,CACX,mBAAoB,cACpBC,OAAQ,OACRC,MAAO,QACP,YAAa,WAEbC,OAAQ,CACNP,WAAYtB,EAAMuB,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDM,OAAQ9B,EAAMuB,YAAYO,OAAOC,MACjCC,SAAUhC,EAAMuB,YAAYS,SAASC,iBAGzCC,YAAa,CACXlB,MAAM,eAAD,OAAiB,IAAjB,OACLD,WAAY,IACZO,WAAYtB,EAAMuB,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDM,OAAQ9B,EAAMuB,YAAYO,OAAOK,QACjCH,SAAUhC,EAAMuB,YAAYS,SAASI,mBA9Fd,2BAiGf,CACVhC,YAAaJ,EAAME,QAAQ,KAlGF,qBAoGrB,CACJG,QAAS,SArGgB,uBAuGnB,CACNW,MAAO,IACPqB,WAAY,IAzGa,4BA2Gd,CACXrB,MAAO,MA5GkB,yCAAC,aA+G1BX,QAAS,OACTc,WAAY,SACZlB,QAASD,EAAME,QAAQ,EAAG,IAEvBF,EAAMsC,OAAOC,SAnHS,IAoHzBnB,eAAgB,cApHS,KAyHdlM,O","file":"static/js/main.36f38d5d.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport useStyles from './useStyles';\r\n\r\nconst AppFrame=props=>{\r\n  const classes = useStyles();\r\n    const { isAdd, title, cityList, setCityList, onMenuClick, handleClickOpen, saveLocationList, removeAllLocation\r\n\t\t\t} = props\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const refreshPage=()=>{\r\n    window.location.reload(false);\r\n  }\r\n  \r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\t\t\r\n  const menuId = 'primary-search-account-menu';\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Refresh</MenuItem>\r\n      <MenuItem onClick={removeAllLocation}>Remove All Cities</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem  onClick={handleClickOpen}>\r\n        <IconButton id=\"butAdd\" aria-label=\"add-cities\" color=\"inherit\">\r\n          <Badge badgeContent={Object.keys(cityList).length} color=\"secondary\">\r\n            <AddCircleIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Add City</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={refreshPage}>\r\n\t\t<IconButton id=\"butRefresh\" aria-label=\"refresh\" color=\"inherit\" size=\"medium\">\r\n            <RefreshIcon />\r\n        </IconButton>\r\n        <p>Refresh</p>\r\n      </MenuItem>\r\n\t    <MenuItem onClick={removeAllLocation}>\r\n\t\t<IconButton id=\"butRemove\" aria-label=\"remove all cities\" color=\"inherit\" size=\"medium\">\r\n            <RemoveIcon />\r\n        </IconButton>\r\n        <p>Remove All Cities</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n\t<React.Fragment>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"Menu\"\r\n\t\t\tsize=\"medium\"\r\n\t\t\tonClick={onMenuClick}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n\t\t\t  {title}\r\n          </Typography>\r\n\t\t  {isAdd&&\r\n\t\t\t  <div className={classes.search}>\r\n\t\t\t\t<div className={classes.searchIcon}>\r\n\t\t\t\t  <SearchIcon />\r\n\t\t\t\t</div>\r\n\t\t\t\t<InputBase\r\n\t\t\t\t  placeholder=\"Search…\"\r\n\t\t\t\t  classes={{\r\n\t\t\t\t\troot: classes.inputRoot,\r\n\t\t\t\t\tinput: classes.inputInput,\r\n\t\t\t\t  }}\r\n\t\t\t\t  inputProps={{ 'aria-label': 'search' }}\r\n\t\t\t\t/>\r\n\t\t\t  </div>\r\n\t\t  }\r\n\t\t\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <IconButton  id=\"butAdd\"  color=\"inherit\" size=\"medium\" onClick={handleClickOpen}>\r\n              <Badge badgeContent={Object.keys(cityList).length} color=\"secondary\">\r\n                <AddCircleIcon />\r\n              </Badge>\r\n            </IconButton>\r\n\t\t\t<IconButton  id=\"butRefresh\"  color=\"inherit\" size=\"medium\" onClick={refreshPage}>\r\n                <RefreshIcon />\r\n            </IconButton>\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n\t\t\t  size=\"medium\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n\t\t\t  size=\"medium\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nAppFrame.propTypes = {\r\n  isAdd: PropTypes.bool.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  cityList: PropTypes.object.isRequired,\r\n  setCityList: PropTypes.func.isRequired,\r\n  onMenuClick: PropTypes.func.isRequired,\r\n  handleClickOpen: PropTypes.func.isRequired,\r\n  saveLocationList: PropTypes.func.isRequired,\r\n  removeAllLocation: PropTypes.func.isRequired,\r\n};\r\nexport default AppFrame","import React, { Suspense, lazy } from \"react\"\r\nimport { Route } from \"react-router-dom\"\r\nimport PropTypes from 'prop-types'\r\nimport styles from \"./styles\"\r\nconst ShowCities = lazy(() => import('../pages/ShowCities')) \r\nconst Home = lazy(() => import(\"../pages/Home\"))\r\nconst Grid = lazy(() => import('../pages/Grid'))\r\n\r\nconst MyMain = \r\n  props => {\r\n      const { cityList, setCityList, handleClickOpen, handleClose, saveLocationList, open, setOpen, selectedValue, setSelectedValue, data\r\n\t\t\t} = props\r\n\t\r\n\treturn ( \r\n      <main>\r\n\t      <Suspense fallback={<div>Loading...</div>}>\r\n\t\t\t  <Route exact path=\"/\">\r\n\t\t\t\t<ShowCities \r\n\t\t\t\t\t\tcityList={cityList}\r\n\t\t\t\t\t\tsetCityList={setCityList}\r\n\t\t\t\t\t\thandleClickOpen={handleClickOpen}\r\n\t\t\t\t\t\thandleClose={handleClose}\r\n\t\t\t\t\t\tsaveLocationList={saveLocationList}\r\n\t\t\t\t\t\topen={open}\r\n\t\t\t\t\t\tselectedValue={selectedValue}\r\n\t\t\t\t\t\tdata={data}\r\n\t\t\t\t/>\r\n\t\t\t  </Route>\r\n\t\t\t  <Route path=\"/grid\"> \r\n\t\t\t\t<Grid/>\r\n\t\t\t   </Route>\t \r\n\t\t\t  <Route path=\"/showcities\"> \r\n\t\t\t\t<ShowCities \r\n\t\t\t\t\t\tcityList={cityList}\r\n\t\t\t\t\t\tsetCityList={setCityList}\r\n\t\t\t\t\t\thandleClickOpen={handleClickOpen}\r\n\t\t\t\t\t\thandleClose={handleClose}\r\n\t\t\t\t\t\tsaveLocationList={saveLocationList}\r\n\t\t\t\t\t\topen={open}\r\n\t\t\t\t\t\tselectedValue={selectedValue}\r\n\t\t\t\t\t\tdata={data}\r\n\t\t\t\t/>\r\n\t\t\t   </Route>\r\n\t\t\t  <Route>\r\n\t\t\t\t<ShowCities \r\n\t\t\t\t\t\tcityList={cityList}\r\n\t\t\t\t\t\tsetCityList={setCityList}\r\n\t\t\t\t\t\thandleClickOpen={handleClickOpen}\r\n\t\t\t\t\t\thandleClose={handleClose}\r\n\t\t\t\t\t\tsaveLocationList={saveLocationList}\r\n\t\t\t\t\t\topen={open}\r\n\t\t\t\t\t\tselectedValue={selectedValue}\r\n\t\t\t\t\t\tdata={data}\r\n\t\t\t\t/>\r\n\t\t\t  </Route>\t\t\t   \r\n\t\t\t  </Suspense>\r\n      </main>\r\n\t  )\r\n  }\r\nMyMain.propTypes = {\r\n  cityList: PropTypes.object.isRequired,\r\n  setCityList: PropTypes.func.isRequired,\r\n  handleClickOpen: PropTypes.func.isRequired,\r\n  handleClose: PropTypes.func.isRequired,\r\n  saveLocationList: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  setOpen: PropTypes.func.isRequired,\r\n  selectedValue: PropTypes.string.isRequired,\r\n  setSelectedValue: PropTypes.func.isRequired,\r\n  data: PropTypes.array.isRequired\r\n}\r\n\r\nexport default MyMain\r\n","import { useEffect, useReducer } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst dataFetchReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'FETCH_INIT':\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        isError: false\r\n      };\r\n    case 'FETCH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        data: action.payload,\r\n        isError: false,\r\n\t\tisLoading: false,\r\n      };\r\n    case 'FETCH_FAILURE':\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isError: true,\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nconst UseDataApi = (initialOptions) => {\r\n  const options = initialOptions\r\n  const [state, dispatch] = useReducer(dataFetchReducer, {\r\n    data: [],\r\n\tisError: false,\r\n    isLoading: false\r\n  });\r\n\r\nconst promiseArray = options.map(option=>axios.get(option))\r\n\r\n\r\n  useEffect(() => {\r\n\t  let didCancel = false;\r\n\t  const fetchData = async () => {\r\n\t\t  dispatch({ type: 'FETCH_INIT' });\r\n\t\t  try {\r\n\t\t\tconst result = await Promise.all(promiseArray);\r\n\t\t\t\tif (!didCancel) {\r\n\t\t\t\tdispatch({ type: 'FETCH_SUCCESS', payload: result});\r\n\t\t\t\t}\r\n\t\t\t  } catch (error) {\r\n\t\t\t\tif (!didCancel) {\r\n\t\t\t\tdispatch({ type: 'FETCH_FAILURE' });\r\n\t\t\t }\r\n\t\t   }\r\n\t\t };\r\n    fetchData();\r\n\t\treturn () => {\r\n\t\t  didCancel = true;\r\n\t\t};\r\n\t\t}, []);\r\n\treturn [state];\r\n};\r\n\t\t\t\r\nexport default UseDataApi;","import React, { useState } from \"react\"\r\nimport { BrowserRouter as Router } from \"react-router-dom\"\r\nimport { createBrowserHistory } from \"history\"\r\nimport AppFrame from \"./AppFrame\"\r\nimport MyDrawer from \"./MyDrawer\"\r\nimport MyMain from \"./MyMain\"\r\nimport UseDataApi from './UseDataApi'\r\n\r\n\r\nconst loadLocationList=()=>{\r\n  let locations = localStorage.getItem('locationList');\r\n  if (locations) {\r\n    try {\r\n      locations = JSON.parse(locations);\r\n    } catch (ex) {\r\n      locations = {};\r\n    }\r\n  }\r\n  if (!locations || Object.keys(locations).length === 0) {\r\n    const key = 1609348;\r\n    locations = {};\r\n    locations[key] = {id: 1609348};\r\n  }\r\n  console.log(JSON.stringify(locations))\r\n  return locations;\r\n}\r\n\r\n\r\nconst AppBar=({ variant }) =>{\r\n\r\n  const [drawer, setDrawer] = useState(false);\r\n  const [title, setTitle] = useState(\"Weather\");\r\n  const [isAdd, setIsAdd]=useState(false)\r\n  const [cityList, setCityList]=useState(loadLocationList())\r\n  const [open, setOpen] = React.useState(false);\r\n  const [selectedValue, setSelectedValue] = React.useState('');\r\n\r\n  const toggleDrawer = () => {\r\n    setDrawer(!drawer);\r\n  };\r\n\r\n  const onItemClick = title => () => {\r\n    setTitle(title);\r\n    setDrawer(variant === \"temporary\" ? false : drawer);\r\n    setDrawer(!drawer);\r\n  };\r\n\r\nconst history = createBrowserHistory();\r\n\r\n\tconst handleClickOpen = () => {\r\n\t\tsetOpen(true);\r\n\t};\r\n\r\n\tconst handleClose = (value) => {\r\n\t\tsetOpen(false);\r\n\t\tsetSelectedValue(value);\r\n\t\tlet newCityList=cityList?cityList:{}\r\n\t    let key = value\r\n        newCityList[key] = {id: value};\r\n\t\tsaveLocationList(newCityList)\r\n\t\tsetCityList(newCityList)\r\n\t\twindow.location.reload(false);\r\n\t};\r\n\r\n  const removeAllLocation=()=>{\r\n\t\tlet newCityList=[]\r\n\t\tsaveLocationList(newCityList);\r\n\t\tsetCityList(newCityList)\r\n\t\twindow.location.reload(false);\r\n\t\t}\r\n\t\r\n\tconst  saveLocationList=(locations)=>{\r\n\t  let newList = JSON.stringify(locations);\r\n\t  localStorage.setItem('locationList', newList);\r\n\t}\r\n\r\n\tconst getQuery=\r\n\t\tObject.keys(cityList).map((cardCity, key)=>{\r\n\t\t\t\t\treturn (\r\n\t\t\t\t     'https://api.openweathermap.org/data/2.5/forecast?id='+cardCity+'&&APPID=a6a8579dd770e584e7e7b568d2539b4d'\r\n\t\t\t\t)\r\n\t\t\t})\r\n\t\t\r\n  const [{ data, isLoading, isError}] = UseDataApi(getQuery)\r\n\r\n\r\n  return (\r\n    <div >\r\n\r\n    <Router history={history}>\r\n      <AppFrame \r\n\t  \t\tisAdd={isAdd} \r\n\t\t\tsetIsAdd={setIsAdd} \r\n\t\t\ttitle={title} \r\n\t\t\tsetTitle={setTitle}\r\n\t\t\tonMenuClick={toggleDrawer} \r\n\t\t\tcityList={cityList}\r\n\t\t\tsetCityList={setCityList}\r\n\t\t\thandleClickOpen={handleClickOpen}\r\n\t\t\thandleClose={handleClose}\r\n\t\t\tsaveLocationList={saveLocationList}\r\n\t\t\tremoveAllLocation={removeAllLocation}\r\n\t\t/>\r\n\r\n\t  <MyMain\r\n\t  \tcityList={cityList}\r\n\t\tsetCityList={setCityList}\r\n\t\thandleClickOpen={handleClickOpen}\r\n\t\thandleClose={handleClose}\r\n\t\tsaveLocationList={saveLocationList}\r\n\t\topen={open}\r\n\t\tsetOpen={setOpen}\r\n\t\tselectedValue={selectedValue}\r\n\t\tsetSelectedValue={setSelectedValue}\r\n\t\tdata={data}\r\n\t  />\r\n\t  </Router>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AppBar\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Appbar from 'components/Appbar';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Appbar />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import { fade, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2)\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  fab:{\r\n\t   [\"background-color\"]: '#3f51b5',\r\n\t   [\"border-radius\"]: '50%',\r\n\t    bottom: '1rem',\r\n\t\theight: '56px',\r\n\t\tpadding: '12px',\r\n\t\tposition: 'fixed',\r\n\t\tright: '1rem',\r\n\t\twidth: '56px',\r\n\t\t[\"z-index\"]: 1000\t\t   \r\n\t   },\r\n\r\n\tremoveCity: {\r\n\t\t\"background-color\": 'transparent',\r\n\t\tborder: 'none',\r\n\t\tfloat: 'right',\r\n\t\t\"font-size\": 'x-large'\r\n},\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${240}px)`,\r\n    marginLeft: 240,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: 240,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: 240,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n\t   \r\n}));\r\n\r\nexport default useStyles"],"sourceRoot":""}